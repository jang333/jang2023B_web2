#톰캣 서버 포트 변경
server.port = 80

#JDBC 연동
#1.해당 JDBC 클래스를 호출
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
#2. 해당 JDBC 클래스 이용해 접속할 DB서버 경로 설정
spring.datasource.url=jdbc:mysql://localhost:3306/springweb2
#3. DB서버의 아이디와 비밀번호
spring.datasource.username=root
spring.datasource.password=1234
#4. JPA DDL(create, drop ...)에 대해 옵션
#       1. 서버 켜질때 DDL 생성 여부
spring.jpa.hibernate.ddl-auto = create

#======================= 작업시 테스트 확인용 =======================
#5. JPA 가 SQL 실행한 결과 보고 있을때 CONSOLE에 실행된 SQL 표시
spring.jpa.properties.hibernate.show_sql=true
#6. CONSOLE에 실행된 SQL 표시할때 엔터처리
spring.jpa.properties.hibernate.format_sql=true
#7. 샘플데이터
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true
# 샘플데이터 (resources 폴더내 data.sql 파일 내 코드를 읽어줌
#======================= ================ =======================

# 1. ========================== 카카오 ===========================
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.user-name-attribute=id
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me

spring.security.oauth2.client.registration.kakao.client-name=kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.redirect_uri=http://localhost:80/login/oauth2/code/kakao

spring.security.oauth2.client.registration.kakao.client-id=29dfd7b414d2e351b231f3bd6833fd7a
spring.security.oauth2.client.registration.kakao.client-secret=e8nfRilWmPnQH02qdpksC9ZmJlnh4DIK
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.scope=profile_nickname

# 2.========================== 네이버 ============================
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.user-name-attribute=response
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me

spring.security.oauth2.client.registration.naver.client-name=naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.redirect_uri=http://localhost:80/login/oauth2/code/naver

spring.security.oauth2.client.registration.naver.client-id=xEcblf9Cg4UQLKJ5BmIR
spring.security.oauth2.client.registration.naver.client-secret=M3aStNsqHD
spring.security.oauth2.client.registration.naver.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.naver.scope=nickname,email

# 3. =================== 구글 (스프링 설정 제공) ===================
spring.security.oauth2.client.registration.google.client-id=439740620872-lgrqgv0r46m563cfgb9pr5nn62u5dhbj.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=email,profile